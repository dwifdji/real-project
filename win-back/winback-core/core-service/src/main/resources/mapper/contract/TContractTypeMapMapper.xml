<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 2019年01月18日 13时38分36秒 by Generator -->
<mapper namespace="com.winback.core.dao.contract.mapper.TContractTypeMapMapper">

  <resultMap id="BaseResultMap" type="com.winback.core.model.contract.TContractTypeMap">
	<result column="id" jdbcType="INTEGER" property="id" />
	<result column="contract_id" jdbcType="INTEGER" property="contractId" />
	<result column="contract_type_id" jdbcType="INTEGER" property="contractTypeId" />
	<result column="delete_flag" jdbcType="BIT" property="deleteFlag" />
	<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <sql id="Base_Column_List">
	id, contract_id, contract_type_id, delete_flag, create_time, update_time
  </sql>
  
  <select id="selectAll" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
    from win.t_contract_type_map
  </select>
  
  <select id="selectByCondition" parameterType="com.winback.core.condition.contract.TContractTypeMapCondition" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from win.t_contract_type_map
	<where>
      <if test="id != null">
        AND id = #{id,jdbcType=INTEGER}
      </if>
      <if test="contractId != null">
        AND contract_id = #{contractId,jdbcType=INTEGER}
      </if>
      <if test="contractTypeId != null">
        AND contract_type_id = #{contractTypeId,jdbcType=INTEGER}
      </if>
      <if test="deleteFlag != null">
        AND delete_flag = #{deleteFlag,jdbcType=BIT}
      </if>
      <if test="createTime != null">
        AND create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null">
        AND update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
	</where>
  </select>
  
  <insert id="insert" parameterType="com.winback.core.model.contract.TContractTypeMap">
    insert into win.t_contract_type_map
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id, 
      </if>
      <if test="contractId != null">
        contract_id, 
      </if>
      <if test="contractTypeId != null">
        contract_type_id, 
      </if>
      <if test="deleteFlag != null">
        delete_flag, 
      </if>
      <if test="createTime != null">
        create_time, 
      </if>
      <if test="updateTime != null">
        update_time, 
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=INTEGER},
      </if>
      <if test="contractTypeId != null">
        #{contractTypeId,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <update id="updateById" parameterType="com.winback.core.model.contract.TContractTypeMap">
    update win.t_contract_type_map
    <set>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="contractId != null">
        contract_id = #{contractId,jdbcType=INTEGER},
      </if>
      <if test="contractTypeId != null">
        contract_type_id = #{contractTypeId,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
	<where>
      AND id = #{id,jdbcType=INTEGER}
	</where>
  </update>

  <select id="getFullName" resultType="string">
      select concat(bt.name,'-',t.name)
      from win.t_contract_type_map m
      inner join win.t_contract_type t on t.id=m.contract_type_id
      inner join win.t_contract_big_type bt on bt.id=t.big_type_id
      where m.delete_flag=0 and m.contract_id=#{contractId}
  </select>

  <select id="getContractType" resultType="com.winback.core.model.contract.TContractType">
    select t.*
    from win.t_contract_type_map m
    inner join win.t_contract_type t on t.id=m.contract_type_id
    where m.delete_flag=0 and m.contract_id=#{contractId}
  </select>
</mapper>