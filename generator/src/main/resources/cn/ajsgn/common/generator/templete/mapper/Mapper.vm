<?xml version="1.0" encoding="UTF-8"?>
#*
 * Copyright (c) 2017, Ajsgn 杨光 (Ajsgn@foxmail.com).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *#
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- ${createDate_} by Generator -->
<mapper namespace="${basePackage_}.${templeteVariable_.daoPackage}.${beanName}${templeteVariable_.daoSuffix}">

  <resultMap id="BaseResultMap" type="${basePackage_}.${templeteVariable_.entityPackage}.${beanName}">
	#foreach( $columnInfo in $columnInfos) 
	<result column="${columnInfo.columnName}" jdbcType="${columnMapping.getDbColumnType($columnInfo.typeName)}" property="${columnInfo.columnCamelName}" />
	#end
  </resultMap>

  <sql id="Base_Column_List">
	#baseColumns()
  </sql>
  
  <select id="selectAll" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
    from ${schemaName}.${tableName}
  </select>
  
  <select id="selectBy${templeteVariable_.conditionSuffix}" parameterType="${basePackage_}.${templeteVariable_.conditionPackage}.${beanName}${templeteVariable_.conditionSuffix}" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from ${schemaName}.${tableName}
	<where>
	  #foreach( $columnInfo in $columnInfos) 
      <if test="${columnInfo.columnCamelName} != null">
        AND ${columnInfo.columnName} = #{${columnInfo.columnCamelName},jdbcType=${columnMapping.getDbColumnType($columnInfo.typeName)}}
      </if>
      #end
	</where>
  </select>
  
  <insert id="insert" parameterType="${basePackage_}.${templeteVariable_.entityPackage}.${beanName}">
    insert into ${schemaName}.${tableName}
    <trim prefix="(" suffix=")" suffixOverrides=",">
  	  #foreach( $columnInfo in $columnInfos) 
      <if test="${columnInfo.columnCamelName} != null">
        ${columnInfo.columnName}, 
      </if>
      #end
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #foreach( $columnInfo in $columnInfos) 
      <if test="${columnInfo.columnCamelName} != null">
        #{${columnInfo.columnCamelName},jdbcType=${columnMapping.getDbColumnType($columnInfo.typeName)}},
      </if>
      #end
    </trim>
  </insert>
  
  <update id="updateById" parameterType="${basePackage_}.${templeteVariable_.entityPackage}.${beanName}">
    update ${schemaName}.${tableName}
    <set>
  	  #foreach( $columnInfo in $columnInfos) 
      <if test="${columnInfo.columnCamelName} != null">
        ${columnInfo.columnName} = #{${columnInfo.columnCamelName},jdbcType=${columnMapping.getDbColumnType($columnInfo.typeName)}},
      </if>
      #end
    </set>
	<where>
	  #if(!$primaryKeys)
	  AND ID = #{ID,jdbcType=VARCHAR}
	  #end
	  #if($primaryKeys)
	  #foreach( $pk in $primaryKeys)
      AND ${pk.columnName} = #{${pk.columnCamelName},jdbcType=${columnMapping.getDbColumnType($pk.typeName)}}
	  #end
	  #end
	</where>
  </update>

</mapper>