<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 2019年06月25日 09时42分26秒 by Generator -->
<mapper namespace="com.tzCloud.core.dao.legalEngine.mapper.DsrxxParseStatusMapper">

  <resultMap id="BaseResultMap" type="com.tzCloud.core.model.legalEngine.DsrxxParseStatus">
	<result column="id" jdbcType="INTEGER" property="id" />
	<result column="doc_id" jdbcType="VARCHAR" property="docId" />
	<result column="parse_status" jdbcType="TINYINT" property="parseStatus" />
	<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <sql id="Base_Column_List">
	id, doc_id, parse_status, create_time, update_time
  </sql>
  
  <select id="selectAll" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
    from dsrxx_parse_status
  </select>
  
  <select id="selectByCondition" parameterType="com.tzCloud.core.condition.legalEngine.DsrxxParseStatusCondition" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from dsrxx_parse_status
	<where>
      <if test="id != null">
        AND id = #{id,jdbcType=INTEGER}
      </if>
      <if test="docId != null">
        AND doc_id = #{docId,jdbcType=VARCHAR}
      </if>
      <if test="parseStatus != null">
        AND parse_status = #{parseStatus,jdbcType=TINYINT}
      </if>
      <if test="createTime != null">
        AND create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null">
        AND update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
	</where>
  </select>
  
  <insert id="insert" parameterType="com.tzCloud.core.model.legalEngine.DsrxxParseStatus">
    insert into dsrxx_parse_status
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id, 
      </if>
      <if test="docId != null">
        doc_id, 
      </if>
      <if test="parseStatus != null">
        parse_status, 
      </if>
      <if test="createTime != null">
        create_time, 
      </if>
      <if test="updateTime != null">
        update_time, 
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="docId != null">
        #{docId,jdbcType=VARCHAR},
      </if>
      <if test="parseStatus != null">
        #{parseStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <update id="updateById" parameterType="com.tzCloud.core.model.legalEngine.DsrxxParseStatus">
    update dsrxx_parse_status
    <set>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="docId != null">
        doc_id = #{docId,jdbcType=VARCHAR},
      </if>
      <if test="parseStatus != null">
        parse_status = #{parseStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
	<where>
      AND id = #{id,jdbcType=INTEGER}
	</where>
  </update>

  <insert id="batchInsert" parameterType="java.lang.String">
    INSERT INTO dsrxx_parse_status (doc_id)
    VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item})
    </foreach>
    ON DUPLICATE KEY UPDATE update_time = now()
  </insert>

  <update id="batchUpdate" parameterType="java.lang.String">
    update dsrxx_parse_status set parse_status=1
    where doc_id in
    (
    <foreach collection="list" separator= "," item="item" index="index">
      #{item}
    </foreach>
    )
  </update>


  <update id="batchUpdateStatus" parameterType="java.util.List">
    update dsrxx_parse_status set parse_status=#{status}
    where doc_id in
    (
    <foreach collection="list" separator= "," item="item" index="index">
      #{item}
    </foreach>
    )
  </update>

  <select id="findNoParseDocId" resultType="java.lang.String">
    select doc_id from dsrxx_parse_status where parse_status = 0
  </select>

  <select id="findNoParseDocId_COUNT" resultType="Long">
    select count(doc_id) from dsrxx_parse_status where parse_status = 0
  </select>

  <update id="batchUpdateUnParsed" parameterType="java.lang.String">
    update dsrxx_parse_status set parse_status=2
    where doc_id in
    (
    <foreach collection="list" separator= "," item="item" index="index">
      #{item}
    </foreach>
    )
  </update>

  <update id="batchUpdateErrorParsed" parameterType="java.lang.String">
    update dsrxx_parse_status set parse_status=3
    where doc_id in
    (
    <foreach collection="list" separator= "," item="item" index="index">
      #{item}
    </foreach>
    )
  </update>

  <select id="findDocId" parameterType="java.lang.String" resultType="java.lang.String">
    select doc_id from dsrxx_parse_status where
    doc_id in (
    <foreach collection="list" item="item" index="index" separator=",">
      #{item}
    </foreach>
    )
  </select>

</mapper>